#! /usr/bin/env python2

"Handles command-line input for the fMRI analysis"

import os
import argparse

import ul_sens_analysis.figures
import ul_sens_analysis.config


def main():
    "Parse the command-line input and offload"

    proc_options = [
        "resp_amp_rois",
        "resp_amp",
        "stim_library",
        "resp_diff",
        "resid",
        "task"
    ]

    parser = argparse.ArgumentParser()

    parser.add_argument(
        "proc_step",
        help="Processing step",
        choices=proc_options
    )

    args = parser.parse_args()

    conf = ul_sens_analysis.config.get_conf()

    if args.proc_step == "resp_amp_rois":
        save_path = os.path.join(
            conf.base_fig_dir,
            "ul_sens_resp_amp_roi"
        )
        ul_sens_analysis.figures.plot_resp_amp_rois(save_path=save_path)

    elif args.proc_step == "resp_amp":
        save_path = os.path.join(
            conf.base_fig_dir,
            "ul_sens_resp_amp"
        )
        ul_sens_analysis.figures.plot_resp_amp(save_path=save_path)

    elif args.proc_step == "stim_library":
        save_path = os.path.join(
            conf.base_fig_dir,
            "ul_sens_stim_library"
        )
        ul_sens_analysis.figures.write_stim_library(save_path=save_path)

    elif args.proc_step == "resp_diff":
        save_path = os.path.join(
            conf.base_fig_dir,
            "ul_sens_resp_diff"
        )
        ul_sens_analysis.figures.plot_top_resp_diff(save_path=save_path)

    elif args.proc_step == "resid":
        save_path = os.path.join(
            conf.base_fig_dir,
            "ul_sens_resid"
        )
        ul_sens_analysis.figures.plot_traces(save_path=save_path)

    elif args.proc_step == "task":
        save_path = os.path.join(
            conf.base_fig_dir,
            "ul_sens_task"
        )
        ul_sens_analysis.figures.plot_task(save_path=save_path)

if __name__ == "__main__":
    main()
